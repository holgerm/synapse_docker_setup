version: "3.3"
services:
    nginx:
        container_name: nginx
        image: nginxproxy/nginx-proxy
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
            - 8008:8008
            - 8448:8448
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - /var/docker/nginx/html:/usr/share/nginx/html
            - /var/docker/nginx/certs:/etc/nginx/certs
            - /var/docker/nginx/vhost:/etc/nginx/vhost.d
            - ./nginx/conf.d:/etc/nginx/conf.d
        logging:
            options:
                max-size: "10m"
                max-file: "3"

    letsencrypt-companion:
        container_name: letsencrypt-companion
        image: nginxproxy/acme-companion
        restart: unless-stopped
        volumes_from:
            - nginx
        volumes:
            - ./nginx/certs:/etc/nginx/certs
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/docker/nginx/acme:/etc/acme.sh
        environment:
            DEFAULT_EMAIL: ${LETSENCRYPT_EMAIL}
 
    synapse:
        image: "matrixdotorg/synapse:latest"
        container_name: "synapse"
        volumes:
            - ./data/synapse:/data
        environment:
            LETSENCRYPT_HOST: ${LETSENCRYPT_DOMAIN}
            VIRTUAL_HOST: ${LETSENCRYPT_DOMAIN}
            VIRTUAL_PORT: 8008
            SYNAPSE_SERVER_NAME: ${LETSENCRYPT_DOMAIN}
            SYNAPSE_REPORT_STATS: "yes"
 
    postgresql:
        image: postgres:latest
        container_name: "postgres"
        restart: always
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_INITDB_ARGS: "--encoding='UTF8' --lc-collate='C' --lc-ctype='C'"
        volumes:
            - db-data:/var/lib/postgresql/data

    periodic-backup:
        build: ./periodic-backup
        container_name: database-backup
        environment:
            DB_CONTAINER_NAME: "postgres"
            DATABASE_NAME: ${DB_NAME}
            DB_USER: ${DB_USER}
            PGPASSWORD: ${DB_PASSWORD}
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./periodic-backup/backup:/var/postgres/backup
            - ./periodic-backup/scripts:/etc/periodic
        command: crond -f -d 8
        restart: always

volumes:
    db-data:
